[{"C:\\Jai\\JavaScript\\ReactLearning\\do-not-pay-test\\src\\index.js":"1","C:\\Jai\\JavaScript\\ReactLearning\\do-not-pay-test\\src\\App.js":"2","C:\\Jai\\JavaScript\\ReactLearning\\do-not-pay-test\\src\\reportWebVitals.js":"3","C:\\Jai\\JavaScript\\ReactLearning\\do-not-pay-test\\src\\components\\List.js":"4","C:\\Jai\\JavaScript\\ReactLearning\\do-not-pay-test\\src\\components\\NewForm.js":"5","C:\\Jai\\JavaScript\\ReactLearning\\do-not-pay-test\\src\\components\\TaskName.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":3005,"mtime":1611550412290,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":2612,"mtime":1611548604996,"results":"11","hashOfConfig":"8"},{"size":660,"mtime":1611546870737,"results":"12","hashOfConfig":"8"},{"size":497,"mtime":1611548770703,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1q9s9hl",{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Jai\\JavaScript\\ReactLearning\\do-not-pay-test\\src\\index.js",[],["29","30"],"C:\\Jai\\JavaScript\\ReactLearning\\do-not-pay-test\\src\\App.js",["31","32","33"],"import './App.css';\nimport React from \"react\";\nimport List from './components/List'\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.handleAddTask = this.handleAddTask.bind(this);\n    this.handleDeleteTask = this.handleDeleteTask.bind(this);\n    this.state ={\n      dragInfo: null,\n      lists: [\n      {\n         TaskName: 'Pending',\n         id: 0,\n         tasks:[\n           {title:'Title1', body: 'Pending Task1', id:0},\n           {title:'Title2', body: 'Pending Task2',id:1},\n         ]\n      },\n      {\n        TaskName: 'In Progress',\n        id: 1,\n        tasks:[\n          {title:'Title1', body: 'InProgress Task1', id:0},\n          {title:'Title2', body: 'InProgress Task2', id:1},\n        ]\n     },\n     {\n      TaskName: 'Completed',\n      id: 2,\n      tasks:[\n        {title:'Title1', body: 'Completed Task1', id:0},\n        {title:'Title2', body: 'Completed Task2', id:1},\n      ]\n    }\n    ]\n  }\n  }\n\n  onDragStart = (e, fromList) => {\n    const dragInfo = {\n      taskId: e.currentTarget.id,\n      fromList: fromList\n    }\n    this.setState({dragInfo: dragInfo});\n  }\n\n  onDragOver = (e) => {\n    e.preventDefault();\n  }\n\n  onDrop = (e, listNum) => { \n    const droppedTask = this.state.dragInfo;\n    const listsInfo = [...this.state.lists];\n    const cardsArray = listsInfo[droppedTask.fromList].tasks;\n    \n    const taskCardIndex = cardsArray.findIndex(card => card.id ==  droppedTask.taskId );\n    const taskCard = cardsArray.find(card => card.id ==  droppedTask.taskId );\n    listsInfo[droppedTask.fromList].tasks.splice(taskCardIndex,1);\n    listsInfo[listNum].tasks.push({...taskCard});\n    \n    this.setState({\n      lists: listsInfo\n    })\n    \n  }\n\n  handleAddTask =(newTask) =>{\n    let listInfo = [...this.state.lists];\n    const taskCard = listInfo.find(card => card.TaskName ==  newTask.taskName);\n    const len = taskCard.tasks.length\n    const createNewTask = {\n       title: newTask.title,\n       body: newTask.body,\n       id: len\n    }\n    listInfo[taskCard.id].tasks.push({...createNewTask});\n    this.setState({\n      lists: listInfo\n    })\n  }\n\n  handleDeleteTask = (index,id) =>{\n    let listInfo = [...this.state.lists];\n    let tasklist = listInfo[index].tasks;\n    tasklist.splice(id,1);\n        this.setState({\n            tasks: tasklist\n          });\n  }\n\n  render(){\n    const lists = this.state.lists.map((list,index) =>{\n      return(\n        <div key={index} className=\"task\">\n          <List list = {list} \n                onDragStart={(e, fromList) => this.onDragStart(e, `${list.id}`)}\n                onDragOver={(e) => this.onDragOver(e)}\n                onDrop={(e, listNum) => {this.onDrop(e, `${list.id}`)}}\n                addTask = {(newTask)=>this.handleAddTask(newTask)}\n                deleteTask = {(id)=>this.handleDeleteTask(index,id)}\n          />\n        </div>\n      )\n    }\n    )\n    return (\n      <div  className=\"component-app\">\n        {lists}\n      </div> \n    );\n  }\n}\n\nexport default App;\n","C:\\Jai\\JavaScript\\ReactLearning\\do-not-pay-test\\src\\reportWebVitals.js",[],"C:\\Jai\\JavaScript\\ReactLearning\\do-not-pay-test\\src\\components\\List.js",[],"C:\\Jai\\JavaScript\\ReactLearning\\do-not-pay-test\\src\\components\\NewForm.js",[],["34","35"],"C:\\Jai\\JavaScript\\ReactLearning\\do-not-pay-test\\src\\components\\TaskName.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":58,"column":64,"nodeType":"42","messageId":"43","endLine":58,"endColumn":66},{"ruleId":"40","severity":1,"message":"41","line":59,"column":54,"nodeType":"42","messageId":"43","endLine":59,"endColumn":56},{"ruleId":"40","severity":1,"message":"41","line":71,"column":58,"nodeType":"42","messageId":"43","endLine":71,"endColumn":60},{"ruleId":"36","replacedBy":"44"},{"ruleId":"38","replacedBy":"45"},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["46"],["47"],"no-global-assign","no-unsafe-negation"]